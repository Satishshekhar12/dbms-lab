select * from classroom
where capacity>50;

select * from instructor
where debt_name='Computer Science';

3
select * from course
natural join takes ;

after that

->select * from course
  natural join takes 
  where semester='Spring' and year=2025 ;


4-> select * from student
where tot_cred >10;

5->select * from department
where budget>300000;

6->select debt_name,building from department;

7-> select *  from student
where debt_name='Computer Science';

8-> select title from course;
 
select title from course
where credits=3;


9->select * from instructor
   where debt_name IS NULL;
 

10-> 
select Building ,count(*) AS total_classroom from classroom
group by building;

11->
select course_ID from teaches
where ID='I002';

12->
select debt_name,count(*) as Total_enrolled_student from student
 group by debt_name;
13->
select * from student natural join takes;

select * from student natural join takes where Course_id='MA606' and Grade='A';
14->
select NAME from instructor
where salary>50000;


15->  
select debt_name,avg(salary) as avg_salary from instructor
  group by debt_name;

16->
//updated advisor
/*

SQL> update advisor set I_ID=null
  2  where S_ID='S002';

1 row updated.

SQL> update advisor set I_ID=null
  where S_ID='S001';

1 row updated.

SQL> alter table advisor 
  2  rename column S_ID to ID;
*/



---->

// select name from student natural join advisor;

select name from student natural join advisor
   where I_ID is null;

 
 17->
 // select * from course natural join prereq;

select title from course natural join prereq
where prereq_id='MA606';


18->>
select building ,count(*) as total_section from section
group by building;


19->>
//select * from student natural join takes; 

select name from student natural join takes
where semester='Fall' and year='2025';

20-->
select room_number,building from classroom minus select room_number,building from section;

21-->
select title from course
where  debt_name='Mathematics';


22-->> select name from student join takes on student.id=takes.id where takes.semester in ('Fall','Spring') group by student.id,student.name having count(distinct takes.semester) =2
  2  ;


